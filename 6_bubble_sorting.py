1) Сортировка вставками

Алгоритм состоит в том, что мы берем первые i чисел в массиве и сортируем их за счет передвижения последнего элемента справа налево.
При этом значение последнего элемента засовываем в tmp


Предположим нам дали массив: [6, 5, 3, 1, 8, 7, 2, 4]

Первый срез массива это первое число: 6 (он всегда отсортирован)

Затем срез из двух чисел: [6, 5]
6 > 5, значит передвигаем 5 влево в начало, и получаем [5, 6]

Срез из трех чисел: [5, 6, 3]
Сравниваем 3 с 6, 3 < 6, значит идем дальше; сравниваем 3 с 5, 3 < 5, значит ставим в начало
Получили: [3, 5, 6]

и т. д.

В итоге получаем отсортированный массив

Асимптотика сортировки вставками - O(N^2)
(каждый раз проходит i-ое число раз по срезу: сначала 1, потом 2, 3, 4, .., n-1 и умножаем на количество циклов (n-1) - получили)

def insertion_sort(a):  # a - массив
    for i in range(1, len(a)):  # срез массива из одного элемента - уже отсортирован
        tmp = a[i]  # бегает по массиву справа налево
        k = i-1  # позиция по которой будем бегать
        while k >= 0 and a[k] > tmp:  # сначала первое условие проверяется, потом второе
            print(k, a)
            a[k+1] = a[k]
            k -= 1
        a[k+1] = tmp

A = [1, 6, 7, 2, 9, 4, 9, 10]
insertion_sort(A)
print(A)


2) Сортировка выбором


Алгоритм состоит в том, что мы все время первый элемент сравниваем с оставшимися и в итоге минимальный ставим на первое место.


Предположим нам дали массив: [6, 5, 3, 1, 8, 7, 2, 4]

Сначала 6-ку (0-ую позицию) сравниваем со всеми элементы начиная с 1, если i-ый элементы меньше - меняем местами

То есть поменяется на 5-ке (5 < 6), на 3-ке и на 1-ке, 1-ка минимальный число в массиве, в итоге минимальное значение на первом месте

Затем ищем 1-позицию аналогично

и т. д.

В итоге получаем отсортированный массив

Асимптотика сортировки -  O(N^2)
(Сортирует N чисел, проходя N раз по массиву)

# чуть асимптотика меньше

def choice_sort(a):
    for i in range(0, len(a)-1):  # последний элемент уже автоматически будет отсортирован
        # в a[i] - временный минимум
        for k in range(i+1, len(a)):
            if a[k] < a[i]:
                a[k], a[i] = a[i], a[k]


3) Сортировка пузырьком


Пробегаем по массиву парой чисел (пузырьком), и если первый в паре большой чем первый - то меняем
Получается, что в конце окажется максимальный элемент, затем пробегаемся снова и так сортируем

Предположим нам дали массив: [6, 5, 3, 1, 8, 7, 2, 4]

6-ка сравнивается с 5-кой, меняем местами, затем меняем с 3-кой, с 1-кой, с 8-кой не меняем, и так 8-ка доходит до конца

В итоге получаем отсортированный массив

Асимптотика сортировки -  O(N^2)
(Пара проходит N раз по массиву, сортируя N чисел)
